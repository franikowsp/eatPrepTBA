[{"path":"https://franikowsp.github.io/eatPrepTBA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 eatPrepTBA authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/articles/eatPrepTBA.html","id":"preparations","dir":"Articles","previous_headings":"","what":"Preparations","title":"eatPrepTBA","text":"","code":"# library(eatPrepTBA)"},{"path":"https://franikowsp.github.io/eatPrepTBA/articles/eatPrepTBA.html","id":"login-to-the-iqb-testcenter","dir":"Articles","previous_headings":"","what":"Login to the IQB Testcenter","title":"eatPrepTBA","text":"log IQB Testcenter, can call function create_login(). asked provide user name password (either console dialog using RStudio). function invisibly provides access token, .e., something like key studies, can used function calls retrieve data IQB Testcenter. use key functions, assigned R object, e.g., login. purpose following along documentation, can use following credentials asked: - username: eatPrepTBA - password: eatPrepTBA inital call create_login() (calling login object) returns list workspaces can accessed credentials.","code":"# login <- create_login()"},{"path":"https://franikowsp.github.io/eatPrepTBA/articles/eatPrepTBA.html","id":"access-a-workspace","dir":"Articles","previous_headings":"","what":"Access a workspace","title":"eatPrepTBA","text":"can seen, access workspace labelled eatPrepTBA Documentation associated unique id, .e., 134. access workspace, can either provide label workspace id (– case, match, course). workspace assigned object, .e., workspace, carries token generated create_login() information path find associated files. information can used access files (.e., testtakers, booklets, units) results (.e., responses log data).","code":"# workspace <- access_workspace(login = login, label = \"eatPrepTBA Documentation\") # workspace <- access_workspace(login = login, id = 134)"},{"path":"https://franikowsp.github.io/eatPrepTBA/articles/eatPrepTBA.html","id":"retrieve-files-from-the-workspace","dir":"Articles","previous_headings":"","what":"Retrieve files from the workspace","title":"eatPrepTBA","text":"Using output access_workspace(), one can list (list*() family) different types files. files can also retrieved R objects, .e., tibbles (get*() family).","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/articles/eatPrepTBA.html","id":"testtakers","dir":"Articles","previous_headings":"Retrieve files from the workspace","what":"Testtakers","title":"eatPrepTBA","text":"functions allow list testtaker files (list_testtakers()) return associated testtaker information (get_testtakers()), .e., list logins potential testtakers.","code":"# list_testtakers(workspace = workspace) # get_testtakers(workspace = workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/articles/eatPrepTBA.html","id":"booklets","dir":"Articles","previous_headings":"Retrieve files from the workspace","what":"Booklets","title":"eatPrepTBA","text":"functions list booklet files (list_booklets()) return associated designs (get_booklets()).","code":"# list_booklets(workspace = workspace) # get_booklets(workspace = workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/articles/eatPrepTBA.html","id":"units","dir":"Articles","previous_headings":"Retrieve files from the workspace","what":"Units","title":"eatPrepTBA","text":"functions list unit files (list_units()) return associated unit meta data (get_units()), .e., item information coding scheme used scoring responses.","code":"# list_units(workspace = workspace) # get_units(workspace = workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Philipp Franikowski. Author, maintainer.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Franikowski P (2025). eatPrepTBA: Prepare IQB Technology Based Assesssment (TBA). R package version 0.8.7.9200, https://franikowsp.github.io/eatPrepTBA/.","code":"@Manual{,   title = {eatPrepTBA: Prepare IQB Technology Based Assesssment (TBA)},   author = {Philipp Franikowski},   year = {2025},   note = {R package version 0.8.7.9200},   url = {https://franikowsp.github.io/eatPrepTBA/}, }"},{"path":"https://franikowsp.github.io/eatPrepTBA/index.html","id":"eatpreptba-","dir":"","previous_headings":"","what":"Prepare IQB Technology Based Assesssment (TBA)","title":"Prepare IQB Technology Based Assesssment (TBA)","text":"goal eatPrepTBA provide wrapper functions interact IQB Studio IQB Testcenter APIs. Moreover, provides routines preparing blending data different resources manage TBA studies.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Prepare IQB Technology Based Assesssment (TBA)","text":"can install development version eatPrepTBA GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"franikowsp/eatPrepTBA\")"},{"path":"https://franikowsp.github.io/eatPrepTBA/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Prepare IQB Technology Based Assesssment (TBA)","text":"basic example shows solve common problem:","code":"library(eatPrepTBA)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/Login-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Login credentials — Login-class","title":"Login credentials — Login-class","text":"class containing token communicate API either IQB Studio Lite IQB Testcenter. Objects class created function login_studio() login_testcenter().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/Login-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Login credentials — Login-class","text":"base_url Character. Base URL instance. base_req Function. Base httr2 request (handled internally). ws_list Named list. Returns list labels ids workspaces user access .","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/LoginStudio-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Login credentials for IQB Studio — LoginStudio-class","title":"Login credentials for IQB Studio — LoginStudio-class","text":"class extending Login class additional information IQB Studio. can created function login_studio().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/LoginStudio-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Login credentials for IQB Studio — LoginStudio-class","text":"base_url Character. Base URL IQB Studio installation. base_req Function. Base httr2 request (handled internally). ws_list Named list. Returns list labels ids workspaces user access . wsg_list Named list. Returns list workspace groups user access . user_id Numeric. ID user. user_key Character. Short name user (login name). user_label Character. Long name user. app_version Character. version IQB Studio.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/LoginTestcenter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Login credentials for IQB Testcenter — LoginTestcenter-class","title":"Login credentials for IQB Testcenter — LoginTestcenter-class","text":"class extending Login class additional information IQB Testcenter can created function login_testcenter().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/LoginTestcenter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Login credentials for IQB Testcenter — LoginTestcenter-class","text":"base_url Character. Base URL IQB Testcenter installation. base_req Function. Base httr2 request (handled internally). ws_list Named list. Returns list labels ids workspaces user access .","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/Workspace-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Workspace access — Workspace-class","title":"Workspace access — Workspace-class","text":"class containing token communicate Testcenter API. Objects class created function access_workspace() entering valid Login object.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/Workspace-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Workspace access — Workspace-class","text":"ws_id ID workspace. workspace ID can also found workspace URL. ws_label Label workspace.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/WorkspaceStudio-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Workspace access for IQB Studio — WorkspaceStudio-class","title":"Workspace access for IQB Studio — WorkspaceStudio-class","text":"class extending Login class additional information IQB Studio. can created function login_studio().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/WorkspaceStudio-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Workspace access for IQB Studio — WorkspaceStudio-class","text":"ws_id ID workspace. workspace ID can also found workspace URL. ws_label Label workspace. login LoginStudio. Login information IQB Studio. wsg_id ID workspace group current workspace belongs . See URL identify workspace group id. wsg_label Label workspace group current workspace belongs .","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/WorkspaceTestcenter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Workspace access for IQB Testcenter — WorkspaceTestcenter-class","title":"Workspace access for IQB Testcenter — WorkspaceTestcenter-class","text":"class extending Login class additional information IQB Studio. can created function login_studio().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/WorkspaceTestcenter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Workspace access for IQB Testcenter — WorkspaceTestcenter-class","text":"login LoginTestcenter. Login information IQB Testcenter. wsg_id ID workspace group current workspace belongs . See URL identify workspace group id. wsg_label Label workspace group current workspace belongs .","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/access_workspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a workspace — access_workspace","title":"Access a workspace — access_workspace","text":"Provides access workspace.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/access_workspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a workspace — access_workspace","text":"","code":"access_workspace(login, ws_id = NULL, ws_label = NULL, verbose = FALSE)  # S4 method for class 'LoginStudio' access_workspace(login, ws_id = NULL, ws_label = NULL, verbose = FALSE)  # S4 method for class 'LoginTestcenter' access_workspace(login, ws_id = NULL, ws_label = NULL, verbose = FALSE)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/access_workspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a workspace — access_workspace","text":"login Login Login object generated either login_studio() login_testcenter(). ws_id Numeric. Workspace ws_id (see URL). ws_label Character. Workspace ws_label. verbose Logical. TRUE, additional information printed. Defaults FALSE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/access_workspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a workspace — access_workspace","text":"Workspace object.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/access_workspace.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Access a workspace — access_workspace","text":"access_workspace(LoginStudio): Provide access selected workspace logging access_workspace(LoginTestcenter): Provide access selected workspace logging ","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_comment.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a comment for a unit — add_comment","title":"Add a comment for a unit — add_comment","text":"function adds entry comment tab Studio single unit.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_comment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a comment for a unit — add_comment","text":"","code":"add_comment(workspace, unit_id, comment = NULL)  # S4 method for class 'WorkspaceStudio' add_comment(workspace, unit_id, comment = NULL)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_comment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a comment for a unit — add_comment","text":"workspace WorkspaceStudio. Workspace information necessary retrieve unit information resources API. unit_id Unit ID changed. comment Comment added unit. contain html markup.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_comment.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Add a comment for a unit — add_comment","text":"add_comment(WorkspaceStudio): Add comment defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get multiple units with resources — add_metadata","title":"Get multiple units with resources — add_metadata","text":"function adds unit metadata unit table generated repeatedly get_unit() get_units().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get multiple units with resources — add_metadata","text":"","code":"add_metadata(workspace, units)  # S4 method for class 'WorkspaceStudio' add_metadata(workspace, units)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get multiple units with resources — add_metadata","text":"workspace WorkspaceStudio. Workspace information necessary retrieve unit item metadata API. units Tibble holding units retrieved get units.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get multiple units with resources — add_metadata","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/add_metadata.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get multiple units with resources — add_metadata","text":"add_metadata(WorkspaceStudio): Get multiple unit information coding schemes defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/change_unit_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Change unit settings — change_unit_settings","title":"Change unit settings — change_unit_settings","text":"function updates Studio metadata, .e., versions player, editor, schemer, groups states single unit. change multiple units, use change_units_settings().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/change_unit_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change unit settings — change_unit_settings","text":"","code":"change_unit_settings(   workspace,   unit_id,   player = NULL,   editor = NULL,   schemer = NULL,   group_name = NULL,   state = NULL )  # S4 method for class 'WorkspaceStudio' change_unit_settings(   workspace,   unit_id,   player = NULL,   editor = NULL,   schemer = NULL,   group_name = NULL,   state = NULL )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/change_unit_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change unit settings — change_unit_settings","text":"workspace WorkspaceStudio. Workspace information necessary retrieve unit information resources API. unit_id Unit ID changed. player New player version. editor New editor version. schemer New schemer version. group_name New group name. state New state.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/change_unit_settings.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Change unit settings — change_unit_settings","text":"change_unit_settings(WorkspaceStudio): Get unit information coding scheme defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/change_units_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Change settings of multiple units — change_units_settings","title":"Change settings of multiple units — change_units_settings","text":"function updates Studio metadata, .e., versions player, editor, schemer, groups states multiple units. change single unit, use change_unit_settings().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/change_units_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change settings of multiple units — change_units_settings","text":"","code":"change_units_settings(   workspace,   unit_ids,   player = NULL,   editor = NULL,   schemer = NULL,   group_name = NULL,   state = NULL )  # S4 method for class 'WorkspaceStudio' change_units_settings(   workspace,   unit_ids,   player = NULL,   editor = NULL,   schemer = NULL,   group_name = NULL,   state = NULL )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/change_units_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change settings of multiple units — change_units_settings","text":"workspace WorkspaceStudio. Workspace information necessary retrieve unit information resources API. unit_ids IDs units changed. player New player version. editor New editor version. schemer New schemer version. group_name New group name. state New state.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/change_units_settings.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Change settings of multiple units — change_units_settings","text":"change_units_settings(WorkspaceStudio): Get unit information coding scheme defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Code unit responses with coding schemes — code_responses","title":"Code unit responses with coding schemes — code_responses","text":"function automatically codes responses using eatAutoCode package. already prepared new data format responses received get_responses() read_responses() routines. function soon deleted part code_responses().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code unit responses with coding schemes — code_responses","text":"","code":"code_responses(   responses,   units,   prepare = FALSE,   codes_manual = NULL,   missings = NULL )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code unit responses with coding schemes — code_responses","text":"responses Tibble. Response data retrieved IQB Testcenter setting argument prepare = FALSE get_responses() read_responses(). units Tibble. Unit data retrieved IQB Studio setting argument coding_scheme = TRUE get_units(). prepare Logical. Whether unpack coding results add information coding schemes. codes_manual Tibble (optional). Data frame holding manual codes. Defaults NULL automatic coding. missings Tibble (optional). Provide missing meta data code_id, status, score, code_type. Defaults NULL uses default scheme.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code unit responses with coding schemes — code_responses","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_responses_legacy.html","id":null,"dir":"Reference","previous_headings":"","what":"Code unit responses with coding schemes — code_responses_legacy","title":"Code unit responses with coding schemes — code_responses_legacy","text":"function automatically codes responses using eatAutoCode package.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_responses_legacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code unit responses with coding schemes — code_responses_legacy","text":"","code":"code_responses_legacy(   responses,   units,   prepare = FALSE,   by = NULL,   codes_manual = NULL,   missings = NULL,   parallel = FALSE,   n_cores = NULL )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_responses_legacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code unit responses with coding schemes — code_responses_legacy","text":"responses Tibble. Response data retrieved IQB Testcenter setting argument prepare = FALSE get_responses() read_responses(). units Tibble. Unit data retrieved IQB Studio setting argument coding_scheme = TRUE get_units(). prepare Logical. Whether unpack coding results add information coding schemes. Character. Additional columns subgroups coding (e.g., case duplicate unit data specific person emerge offline settings). codes_manual Tibble (optional). Data frame holding manual codes. Defaults NULL automatic coding. missings Tibble (optional). Provide missing meta data code_id, status, score, code_type. Defaults NULL uses default scheme. parallel Logical. coding conducted multiple cores? n_cores Integer. Number cores used coding (relevant parallel = TRUE). default number available system cores - 1.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_responses_legacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code unit responses with coding schemes — code_responses_legacy","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Code the responses of one unit responses with its coding scheme — code_unit","title":"Code the responses of one unit responses with its coding scheme — code_unit","text":"function automatically codes responses one unit using eatAutoCode package.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code the responses of one unit responses with its coding scheme — code_unit","text":"","code":"code_unit(unit_responses, coding_scheme)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code the responses of one unit responses with its coding scheme — code_unit","text":"unit_responses Character. Response data one unit retrieved IQB Testcenter JSON format. coding_scheme Character. Coding scheme unit retrieved IQB Studio setting argument coding_scheme = TRUE get_units().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code the responses of one unit responses with its coding scheme — code_unit","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_unit_legacy.html","id":null,"dir":"Reference","previous_headings":"","what":"Code the responses of one unit responses with its coding scheme — code_unit_legacy","title":"Code the responses of one unit responses with its coding scheme — code_unit_legacy","text":"function automatically codes responses one unit using eatAutoCode package.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_unit_legacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code the responses of one unit responses with its coding scheme — code_unit_legacy","text":"","code":"code_unit_legacy(unit_responses, coding_scheme)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_unit_legacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code the responses of one unit responses with its coding scheme — code_unit_legacy","text":"unit_responses Character. Response data one unit retrieved IQB Testcenter JSON format. coding_scheme Character. Coding scheme unit retrieved IQB Studio setting argument coding_scheme = TRUE get_units().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/code_unit_legacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code the responses of one unit responses with its coding scheme — code_unit_legacy","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/configure_booklet.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to prepare booklet configuration header — configure_booklet","title":"Helper function to prepare booklet configuration header — configure_booklet","text":"Helper function prepare booklet configuration header","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/configure_booklet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to prepare booklet configuration header — configure_booklet","text":"","code":"configure_booklet(   loading_mode = c(\"lazy\", \"eager\"),   log_policy = c(\"rich\", \"disabled\", \"lean\", \"debug\"),   paging_mode = c(\"buttons\", \"separate\", \"concat-scroll\", \"concat-scroll-snap\"),   page_navibuttons = c(\"off\", \"separate_bottom\"),   unit_navibuttons = c(\"full\", \"arrows_only\", \"off\"),   unit_menu = c(\"off\", \"full\"),   force_presentation_complete = c(\"always\", \"on\", \"off\"),   force_responses_complete = c(\"OFF\", \"always\", \"on\"),   controller_design = c(\"2018\", \"2022\"),   unit_screenheader = c(\"empty\", \"with_unit_title\", \"with_block_title\",     \"with_booklet_title\", \"off\"),   unit_title = c(\"on\", \"off\"),   unit_show_time_left = c(\"off\", \"on\"),   unit_time_left_warnings = c(5),   show_end_button_in_player = c(\"off\", \"always\", \"on_last_unit\"),   restore_current_page_on_return = c(\"off\", \"on\"),   allow_player_to_terminate_test = c(\"on\", \"last_unit\", \"off\"),   lock_test_on_termination = c(\"off\", \"on\"),   ask_for_fullscreen = c(\"on\", \"off\"),   show_fullscreen_button = c(\"on\", \"off\") )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/configure_booklet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to prepare booklet configuration header — configure_booklet","text":"loading_mode Tbd. log_policy Tbd. paging_mode Tbd. page_navibuttons Tbd. unit_navibuttons Tbd. unit_menu Tbd. force_presentation_complete Tbd. force_responses_complete Tbd. controller_design Tbd. unit_screenheader Tbd. unit_title Tbd. unit_show_time_left Tbd. unit_time_left_warnings Tbd. show_end_button_in_player Tbd. restore_current_page_on_return Tbd. allow_player_to_terminate_test Tbd. lock_test_on_termination Tbd. ask_for_fullscreen Tbd. show_fullscreen_button Tbd.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/configure_booklet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to prepare booklet configuration header — configure_booklet","text":"list valid booklet configuration.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/download_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Download codebook — download_codebook","title":"Download codebook — download_codebook","text":"function downloads codebooks IQB Studio.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/download_codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download codebook — download_codebook","text":"","code":"download_codebook(   workspace,   path,   unit_keys = NULL,   format = \"docx\",   missings_profile = NULL,   only_coded = FALSE,   general_instructions = TRUE,   hide_item_var_relation = TRUE,   derived = TRUE,   manual = TRUE,   closed = TRUE,   show_score = FALSE,   code_label_to_upper = TRUE )  # S4 method for class 'WorkspaceStudio' download_codebook(   workspace,   path,   unit_keys = NULL,   format = \"docx\",   missings_profile = NULL,   only_coded = FALSE,   general_instructions = TRUE,   hide_item_var_relation = TRUE,   derived = TRUE,   manual = TRUE,   closed = TRUE,   show_score = FALSE,   code_label_to_upper = TRUE )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/download_codebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download codebook — download_codebook","text":"workspace WorkspaceStudio. Workspace information necessary download codebook via API. path Character. Path codebook file downloaded. unit_keys Character. Keys (short names) units workspace codebook retrieved . set NULL (default), codebook generated units. format Character. Either \"docx\" (default) json. missings_profile Missings profile. (Currently without effect.) only_coded Logical. variables codes shown? general_instructions Logical. general coding instructions printed? Defaults TRUE. hide_item_var_relation Logocal. item-variable relations printed? Defaults FALSE. derived Logical. derived variables printed? Defaults TRUE. manual Logical. items manual coding printed? Defaults TRUE. closed Logical. items automatically coded printed? Defaults TRUE. show_score Logical. score printed? Defaults FALSE. code_label_to_upper Logical. code labels printed capital letters? Defaults TRUE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/download_codebook.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Download codebook — download_codebook","text":"download_codebook(WorkspaceStudio): Upload file defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/download_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Download units — download_units","title":"Download units — download_units","text":"function downloads units IQB Studio Lite.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/download_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download units — download_units","text":"","code":"download_units(   workspace,   path,   unit_keys = NULL,   add_players = TRUE,   add_testtakers_review = 0,   add_testtakers_monitor = 0,   add_testtakers_hot = 0,   password_less = FALSE,   booklet_settings = list() )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/download_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download units — download_units","text":"workspace WorkspaceStudio. Workspace information necessary download files via API. path Character. Path zip file downloaded. unit_keys Character. Keys (short names) units workspace downloaded. set NULL (default), codebook generated units. add_players Logical. resepective Aspect Player(s) selected units added? Defaults TRUE. add_testtakers_review Numeric. Number Testcenter review logins (run-review). Defaults 0. add_testtakers_monitor Numeric. Number Testcenter monitor logins (monitor-group). Defaults 0. add_testtakers_hot Numeric. Number Testcenter testtaker logins (run-review). Defaults 0. password_less Logical. passwords added logins? Defaults FALSE. booklet_settings List. Settings booklet parameters. Please refer : https://pages.cms.hu-berlin.de/iqb/testcenter/pages/booklet-config.html","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_base_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate API request function — generate_base_req","title":"Generate API request function — generate_base_req","text":"function returns base API request instance.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_base_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate API request function — generate_base_req","text":"","code":"generate_base_req(   type,   base_url,   auth_token,   app_version = NULL,   insecure = FALSE )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_base_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate API request function — generate_base_req","text":"type Character. Type URL request, e.g., GET POST. base_url Character. Base URL instance. auth_token Character. Token interact instance API. app_version Character. Version IQB Studio Lite (necessary IQB Testcenter). insecure Logical. https security certificate ignored (recommended Intranet requests might valid security certificate).","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_base_req.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate API request function — generate_base_req","text":"function arguments method, endpoint, query.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_booklet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates booklets XML from unit information — generate_booklet","title":"Generates booklets XML from unit information — generate_booklet","text":"Generates booklets XML unit information","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_booklet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates booklets XML from unit information — generate_booklet","text":"","code":"generate_booklet(   booklet_id,   booklet_label,   booklet_description = NULL,   booklet_configuration = NULL,   units = NULL,   testlets = NULL,   app_version = \"15.3.0-alpha\" )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_booklet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates booklets XML from unit information — generate_booklet","text":"booklet_id Character. Id booklet generated. booklet_label Character. Label booklet generated. booklet_description Character. Description booklet generated. Defaults NULL. booklet_configuration list can submitted configure_booklet(). units Tbd. testlets Tbd. app_version Version target Testcenter instance.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_booklet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates booklets XML from unit information — generate_booklet","text":"booklet XML.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_testtakers.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates testtakers XML from unit information — generate_testtakers","title":"Generates testtakers XML from unit information — generate_testtakers","text":"Generates testtakers XML unit information","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_testtakers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates testtakers XML from unit information — generate_testtakers","text":"","code":"generate_testtakers(   testtakers,   custom_texts = NULL,   app_version = \"15.3.0-alpha\" )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_testtakers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates testtakers XML from unit information — generate_testtakers","text":"testtakers Must data frame columns ... custom_texts Optional. List custom texts modified. app_version Version target Testcenter instance.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/generate_testtakers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates testtakers XML from unit information — generate_testtakers","text":"testtakers XML.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_coding_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Get coding report — get_coding_report","title":"Get coding report — get_coding_report","text":"function returns coding report given IQB Studio workspace.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_coding_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get coding report — get_coding_report","text":"","code":"get_coding_report(workspace)  # S4 method for class 'WorkspaceStudio' get_coding_report(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_coding_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get coding report — get_coding_report","text":"workspace WorkspaceStudio. Workspace information necessary retrieve coding report.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_coding_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get coding report — get_coding_report","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_coding_report.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get coding report — get_coding_report","text":"get_coding_report(WorkspaceStudio): Upload file defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Get credentials for access management — get_credentials","title":"Get credentials for access management — get_credentials","text":"function returns credentials object either signing IQB Studio Lite IQB Testcenter (used internally).","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get credentials for access management — get_credentials","text":"","code":"get_credentials(base_url, keyring, change_key, dialog, ...)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get credentials for access management — get_credentials","text":"base_url Character. Base URL instance. keyring Logical. keyring package used? change_key Logical. keyring credentials changed (valid, keyring set TRUE)? dialog Logical. dialog asking username password used? ... Additional arguments. testing purposes.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get credentials for access management — get_credentials","text":"list entries name password.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get logs — get_logs","title":"Get logs — get_logs","text":"function returns logs IQB Testcenter","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get logs — get_logs","text":"","code":"get_logs(workspace, groups = NULL)  # S4 method for class 'WorkspaceTestcenter' get_logs(workspace, groups = NULL)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get logs — get_logs","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve unit information resources API. groups Character. Name groups retrieved  groups specified.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get logs — get_logs","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_logs.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get logs — get_logs","text":"get_logs(WorkspaceTestcenter): Get responses given Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_metadata_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a unit with resources — get_metadata_profile","title":"Get a unit with resources — get_metadata_profile","text":"function returns unit information coding scheme single unit. retrieve multiple units, use get_units().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_metadata_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a unit with resources — get_metadata_profile","text":"","code":"get_metadata_profile(url)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_metadata_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a unit with resources — get_metadata_profile","text":"url JSON file Skohub metadata profile.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_metadata_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a unit with resources — get_metadata_profile","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Get responses directly from Testcenter — get_responses","title":"Get responses directly from Testcenter — get_responses","text":"function returns responses selected groups.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get responses directly from Testcenter — get_responses","text":"","code":"get_responses(workspace, groups = NULL)  # S4 method for class 'WorkspaceTestcenter' get_responses(workspace, groups = NULL)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get responses directly from Testcenter — get_responses","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve unit information resources API. groups Character. Name groups retrieved groups specified.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get responses directly from Testcenter — get_responses","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_responses.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get responses directly from Testcenter — get_responses","text":"get_responses(WorkspaceTestcenter): Get responses given Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get results — get_results","title":"Get results — get_results","text":"function returns responses selected groups.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get results — get_results","text":"","code":"get_results(workspace)  # S4 method for class 'WorkspaceTestcenter' get_results(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get results — get_results","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve results information.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get results — get_results","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_results.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get results — get_results","text":"get_results(WorkspaceTestcenter): Get results given Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_reviews.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reviews — get_reviews","title":"Get reviews — get_reviews","text":"function returns responses selected groups.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_reviews.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reviews — get_reviews","text":"","code":"get_reviews(workspace, groups = NULL, use_new_version = TRUE)  # S4 method for class 'WorkspaceTestcenter' get_reviews(workspace, groups = NULL, use_new_version = TRUE)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_reviews.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reviews — get_reviews","text":"workspace WorkspaceTestcenter. IQB Testcenter workspace information necessary retrieve reviews API. groups Character. Name groups retrieved groups specified. use_new_version Logical. new output format used. Defaults TRUE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_reviews.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reviews — get_reviews","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_reviews.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get reviews — get_reviews","text":"get_reviews(WorkspaceTestcenter): Get responses given Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get workspace settings — get_settings","title":"Get workspace settings — get_settings","text":"function returns workspace settings single workspace.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get workspace settings — get_settings","text":"","code":"get_settings(workspace, metadata = TRUE)  # S4 method for class 'WorkspaceStudio' get_settings(workspace, metadata = TRUE)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get workspace settings — get_settings","text":"workspace WorkspaceStudio. Workspace information necessary retrieve unit information resources API. metadata Logical. workspace metadata, .e., item unit metadata profiles, prepared? Defaults TRUE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get workspace settings — get_settings","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_settings.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get workspace settings — get_settings","text":"get_settings(WorkspaceStudio): Get unit information coding scheme defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Get states — get_states","title":"Get states — get_states","text":"Get states","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get states — get_states","text":"","code":"get_states(workspace)  # S4 method for class 'WorkspaceStudio' get_states(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get states — get_states","text":"workspace WorkspaceStudio. Workspace information necessary retrieve state list API.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get states — get_states","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_states.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get states — get_states","text":"Returns list states workspace group IQB Studio, .e., id, label, associated colors.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_states.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get states — get_states","text":"get_states(WorkspaceStudio): List units defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_system_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get system check reports — get_system_checks","title":"Get system check reports — get_system_checks","text":"function returns system check reports selected  () groups.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_system_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get system check reports — get_system_checks","text":"","code":"get_system_checks(workspace, groups = NULL, prepare = TRUE)  # S4 method for class 'WorkspaceTestcenter' get_system_checks(workspace, groups = NULL, prepare = TRUE)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_system_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get system check reports — get_system_checks","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve unit information resources API. groups Character. Name groups retrieved groups specified. prepare Logical. unit responses prepared, .e., JSON objects responses unpacked? Defaults TRUE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_system_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get system check reports — get_system_checks","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_system_checks.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get system check reports — get_system_checks","text":"get_system_checks(WorkspaceTestcenter): Get responses given Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a unit with resources — get_unit","title":"Get a unit with resources — get_unit","text":"function returns unit information coding scheme single unit. retrieve multiple units, use get_units().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a unit with resources — get_unit","text":"","code":"get_unit(   workspace,   unit_id,   unit_key = NULL,   metadata = TRUE,   unit_definition = FALSE,   coding_scheme = FALSE,   verbose = FALSE )  # S4 method for class 'WorkspaceStudio' get_unit(   workspace,   unit_id = NULL,   unit_key = NULL,   metadata = TRUE,   unit_definition = FALSE,   coding_scheme = FALSE,   verbose = FALSE )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a unit with resources — get_unit","text":"workspace WorkspaceStudio. Workspace information necessary retrieve unit information resources API. unit_id Integer. ID unit retrieved (either unit_id unit_key must given; discordant, unit_id used). unit_key Character. Name unit retrieved (either unit_id unit_key must given; discordant, unit_id used). metadata Logical. metadata added? Defaults TRUE. unit_definition Logical. unit definition added? Defaults FALSE. coding_scheme Logical. coding scheme added? Defaults FALSE. verbose Logical. function return additional messages. Defaults FALSE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a unit with resources — get_unit","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_unit.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get a unit with resources — get_unit","text":"get_unit(WorkspaceStudio): Get unit information coding scheme defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Get multiple units with resources — get_units","title":"Get multiple units with resources — get_units","text":"function returns unit information multiple units repeatedly calling get_unit().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get multiple units with resources — get_units","text":"","code":"get_units(   workspace,   unit_ids = NULL,   metadata = TRUE,   unit_definition = FALSE,   coding_scheme = FALSE,   verbose = FALSE )  # S4 method for class 'WorkspaceStudio' get_units(   workspace,   unit_ids = NULL,   metadata = TRUE,   unit_definition = FALSE,   coding_scheme = FALSE )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get multiple units with resources — get_units","text":"workspace Workspace. Workspace information necessary retrieve unit information resources API. unit_ids Integer (optional). Vector IDs unit retrieved. ID given, units files resources workspace retrieved. metadata Logical. metadata added? Defaults TRUE. unit_definition Logical. unit definition added? Defaults FALSE. coding_scheme Logical. coding scheme added? Defaults FALSE. verbose Logical. function return additional messages. Defaults FALSE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get multiple units with resources — get_units","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/get_units.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get multiple units with resources — get_units","text":"get_units(WorkspaceStudio): Get multiple unit information coding schemes given Studio workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/insert_manual_legacy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add manual codes to unit responses — insert_manual_legacy","title":"Add manual codes to unit responses — insert_manual_legacy","text":"function automatically codes responses one unit using eatAutoCode package.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/insert_manual_legacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add manual codes to unit responses — insert_manual_legacy","text":"","code":"insert_manual_legacy(unit_responses, unit_codes_manual)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/insert_manual_legacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add manual codes to unit responses — insert_manual_legacy","text":"unit_responses Character. Response data one unit retrieved IQB Testcenter JSON format. coding_scheme Character. Coding scheme unit retrieved IQB Studio setting argument coding_scheme = TRUE get_units().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/insert_manual_legacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add manual codes to unit responses — insert_manual_legacy","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_booklets.html","id":null,"dir":"Reference","previous_headings":"","what":"List booklet files — list_booklets","title":"List booklet files — list_booklets","text":"function serves wrapper list_files().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_booklets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List booklet files — list_booklets","text":"","code":"list_booklets(workspace)  # S4 method for class 'WorkspaceTestcenter' list_booklets(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_booklets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List booklet files — list_booklets","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve booklet list API.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_booklets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List booklet files — list_booklets","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_booklets.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"List booklet files — list_booklets","text":"list_booklets(WorkspaceTestcenter): List booklets given IQB Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_files.html","id":null,"dir":"Reference","previous_headings":"","what":"List files — list_files","title":"List files — list_files","text":"Please note wrapper functions list_units(), list_booklets(), list_testtakers().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files — list_files","text":"","code":"list_files(workspace, type = NULL)  # S4 method for class 'WorkspaceTestcenter' list_files(workspace, type = NULL)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files — list_files","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve file list API. type Character (optional). Type files retrieve API. type specified, files listed.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List files — list_files","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_files.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"List files — list_files","text":"list_files(WorkspaceTestcenter): List files given IQB Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"List groups — list_groups","title":"List groups — list_groups","text":"List groups","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List groups — list_groups","text":"","code":"list_groups(workspace)  # S4 method for class 'WorkspaceStudio' list_groups(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List groups — list_groups","text":"workspace WorkspaceStudio. Workspace information necessary retrieve group list API.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List groups — list_groups","text":"character vector.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_groups.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"List groups — list_groups","text":"list_groups(WorkspaceStudio): List groups defined workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"List unit resource files — list_resources","title":"List unit resource files — list_resources","text":"function serves wrapper list_files().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List unit resource files — list_resources","text":"","code":"list_resources(workspace)  # S4 method for class 'Workspace' list_resources(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List unit resource files — list_resources","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve unit resource list (coding scheme aspect data) API.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List unit resource files — list_resources","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_resources.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"List unit resource files — list_resources","text":"list_resources(Workspace): List resources given IQB Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_system_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"List system check files — list_system_checks","title":"List system check files — list_system_checks","text":"function returns list system checks completed given workspace.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_system_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List system check files — list_system_checks","text":"","code":"list_system_checks(workspace)  # S4 method for class 'WorkspaceTestcenter' list_system_checks(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_system_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List system check files — list_system_checks","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve system check file list API.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_system_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List system check files — list_system_checks","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_system_checks.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"List system check files — list_system_checks","text":"list_system_checks(WorkspaceTestcenter): List system checks given Testcenter workspace.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_testtakers.html","id":null,"dir":"Reference","previous_headings":"","what":"List testtakers files — list_testtakers","title":"List testtakers files — list_testtakers","text":"function serves wrapper list_files().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_testtakers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List testtakers files — list_testtakers","text":"","code":"list_testtakers(workspace)  # S4 method for class 'WorkspaceTestcenter' list_testtakers(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_testtakers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List testtakers files — list_testtakers","text":"workspace WorkspaceTestcenter. Workspace information necessary retrieve testtakers list API.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_testtakers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List testtakers files — list_testtakers","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_testtakers.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"List testtakers files — list_testtakers","text":"list_testtakers(WorkspaceTestcenter): List testtakers given IQB Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_units.html","id":null,"dir":"Reference","previous_headings":"","what":"List unit files — list_units","title":"List unit files — list_units","text":"List unit files","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List unit files — list_units","text":"","code":"list_units(workspace)  # S4 method for class 'WorkspaceStudio' list_units(workspace)  # S4 method for class 'WorkspaceTestcenter' list_units(workspace)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List unit files — list_units","text":"workspace Workspace. Workspace information necessary retrieve unit list API.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List unit files — list_units","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List unit files — list_units","text":"function returns list units given workspace. function serves wrapper list_files().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/list_units.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"List unit files — list_units","text":"list_units(WorkspaceStudio): List units given IQB Studio workspace list_units(WorkspaceTestcenter): List units given IQB Testcenter workspace","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_studio.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a LoginStudio object for the IQB Studio Lite — login_studio","title":"Generate a LoginStudio object for the IQB Studio Lite — login_studio","text":"Provides routine login instance IQB Studio Lite.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_studio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a LoginStudio object for the IQB Studio Lite — login_studio","text":"","code":"login_studio(   base_url = \"https://www.iqb-studio.de/\",   app_version = \"9.5.0\",   keyring = FALSE,   change_key = FALSE,   dialog = TRUE,   verbose = FALSE )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_studio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a LoginStudio object for the IQB Studio Lite — login_studio","text":"base_url Character. Base URL hosted instance IQB Studio Lite. Default https://www.iqb-studio.de/. app_version Character. App version IQB Studio instance. Defaults \"9.5.0\". keyring Logical. keyring package used save passkey? saves credentials local machine. Defaults FALSE. change_key Logical. password domain changed - keyring password changed? Defaults FALSE. dialog Logical. password entered using RStudio dialog (TRUE) using console (FALSE). Defaults TRUE. verbose Logical. TRUE, additional information printed. Defaults FALSE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_studio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a LoginStudio object for the IQB Studio Lite — login_studio","text":"object LoginStudio class.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_studio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a LoginStudio object for the IQB Studio Lite — login_studio","text":"Calling login_studio() function generates following curl request base_url (default \"https://www.iqb-studio.de/) name password provided user:   Note name password available function call accessed later part Login object generated.","code":"curl --location --request POST '{base_url}/api/login?username={name}&password={password}' --header 'app-version: 9.5.0' }'"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_testcenter.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a LoginTestcenter object for the IQB Testcenter — login_testcenter","title":"Generate a LoginTestcenter object for the IQB Testcenter — login_testcenter","text":"Provides routine login instance IQB Testcenter.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_testcenter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a LoginTestcenter object for the IQB Testcenter — login_testcenter","text":"","code":"login_testcenter(   base_url = \"https://iqb-testcenter2.de/\",   keyring = FALSE,   change_key = FALSE,   dialog = TRUE,   insecure = FALSE,   verbose = FALSE )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_testcenter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a LoginTestcenter object for the IQB Testcenter — login_testcenter","text":"base_url Character. Base URL hosted instance IQB Testcenter. Default https://iqb-testcenter2.de/. keyring Logical. keyring package used save passkey? saves credentials local machine. Defaults FALSE. change_key Logical. password domain changed - keyring password changed? Defaults FALSE. dialog Logical. password entered using RStudio dialog (TRUE) using console (FALSE). Defaults TRUE. insecure Logical. https security certificate ignored (recommended Intranet requests might valid security certificate). verbose Logical. TRUE, additional information printed. Defaults FALSE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_testcenter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a LoginTestcenter object for the IQB Testcenter — login_testcenter","text":"object LoginTestcenter class.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/login_testcenter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a LoginTestcenter object for the IQB Testcenter — login_testcenter","text":"Calling login_testcenter() function generates following curl request base_url (default https://iqb-testcenter2.de/api) name password provided user:   Note name password available function call accessed later part Login object generated.","code":"curl --location --request PUT '{base_url}/session/admin' --header 'Content-Type: application/json' --data '{     \"name\": \"{name}\",     \"password\": \"{password}\" }'"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/prepare_coding_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares a readable version of a coding scheme of one unit — prepare_coding_scheme","title":"Prepares a readable version of a coding scheme of one unit — prepare_coding_scheme","text":"Extends given coding scheme unit full data frame can filtered batch checks.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/prepare_coding_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares a readable version of a coding scheme of one unit — prepare_coding_scheme","text":"","code":"prepare_coding_scheme(coding_scheme)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/prepare_coding_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares a readable version of a coding scheme of one unit — prepare_coding_scheme","text":"coding_scheme Coding scheme prepared get_units() setting argument coding_scheme = TRUE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/prepare_coding_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares a readable version of a coding scheme of one unit — prepare_coding_scheme","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/prepare_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares responses — prepare_responses","title":"Prepares responses — prepare_responses","text":"function returns responses format values still list columns need unpacked.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/prepare_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares responses — prepare_responses","text":"","code":"prepare_responses(responses)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/prepare_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares responses — prepare_responses","text":"responses Tibble. Responses retrieved IQB Testcenter via read_responses() extracted csv read via read_responses().","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/prepare_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares responses — prepare_responses","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/read_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads responses files — read_responses","title":"Reads responses files — read_responses","text":"function returns testtakers information downloaded testtakers file.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/read_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads responses files — read_responses","text":"","code":"read_responses(files)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/read_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads responses files — read_responses","text":"files Character. Vector paths csv files IQB Testcenter read.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/read_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads responses files — read_responses","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/read_system_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads and prepares system check file — read_system_checks","title":"Reads and prepares system check file — read_system_checks","text":"function returns system check data downloaded system check file.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/read_system_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads and prepares system check file — read_system_checks","text":"","code":"read_system_checks(file)"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/read_system_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads and prepares system check file — read_system_checks","text":"file Character. Path csv file IQB Testcenter read.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/read_system_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads and prepares system check file — read_system_checks","text":"tibble.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/upload_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload file — upload_file","title":"Upload file — upload_file","text":"function uploads file IQB Testcenter.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/upload_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload file — upload_file","text":"","code":"upload_file(   workspace,   path,   status = c(\"success\", \"info\", \"error\", \"warning\"),   verbose = FALSE )  # S4 method for class 'WorkspaceTestcenter' upload_file(   workspace,   path,   status = c(\"success\", \"info\", \"error\", \"warning\"),   verbose = FALSE )"},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/upload_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload file — upload_file","text":"workspace Workspace. Workspace information necessary upload file via API. path Character. Path file uploaded. status Character. Filters status messages (\"success\", \"info\", \"error\", \"warning\") verbose Logical. status messages reported? Defaults FALSE.","code":""},{"path":"https://franikowsp.github.io/eatPrepTBA/reference/upload_file.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Upload file — upload_file","text":"upload_file(WorkspaceTestcenter): Upload file given workspace","code":""}]
